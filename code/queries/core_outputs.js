/*
## Summary
Prepares a core list of research outputs that many other tables use, subsetted from the COKI database.

## Description

## Contacts
julian.tonti-filippini@curtin.edu.au

## License
Apache 2.0

## Requires
table core_papers
table core_heps

## Creates
table research_outputs_world_base

*/
const compile = ({
  ns_core = 'project.dataset',
  scope   = 'world',
  replace = false,
}) => `
-- generated by: ${require('path').basename(__filename)}
BEGIN
  -- base table that the rest of the tables build from
  ${replace ? 'CREATE OR REPLACE TABLE' : 'CREATE TABLE IF NOT EXISTS'} \`${ns_core}.research_outputs_${scope}_base\` AS (
    SELECT 
      A.year_published  AS year,
      A.era_id          AS journal,
      A.doi             AS paper,
      A.num_citations   AS cits,
      ror               AS inst,
      NOT B.ror IS NULL AS is_hep, -- flag set to true if the institution is an Australian HEP
      fc.code           AS field,
      SUBSTRING(fc.code,0,2) AS field2, -- two digit FoR code
      fc.weight         AS frac
    FROM \`${ns_core}.core_papers\` AS A
    LEFT JOIN UNNEST(rors) AS ror
    LEFT JOIN UNNEST(fors) AS fc
    LEFT JOIN \`${ns_core}.core_heps\` AS B ON ror = B.ror
    ORDER BY inst,field,year
  );
  SELECT 
    'sanity checking counts in base table',
    COUNT(DISTINCT paper)   AS unique_papers,
    COUNT(DISTINCT inst)    AS unique_institutions,
    COUNT(DISTINCT journal) AS unique_journals,
    COUNT(DISTINCT field)   AS unique_fields,
    COUNT(DISTINCT year)    AS unique_years,
    COUNT(1)                AS total_rows
  FROM ${ns_core}.research_outputs_${scope}_base;
END;
`;
const compile_all = (args={}) => [ compile(args) ];
module.exports = { compile, compile_all };
if (require.main === module) require('app').cli_compile(compile_all);
