/*
## Summary
Prepares a core list of journal-articles subsetted from all outputs.

## Description

Records are filtered to only include papers that:
- were published between 2011 and 2021
- have at least one institutional affiliation (RoR code)
- have at least one ISSN that matches to a journal in the ERA journals list

Columns include:
- the unique DOI (primary key)
- year of publication (see note below)
- number of times the paper has been cited
- repaired list of ISSNs
- repaired list of linking ISSNs
- list of RORs for affiliated Australian HEPs (if appropriate), otherwise empty array
- list of all associated RoRs (global institutions)

NOTE:
- the mag.Year field in the DOI table is not reliable. It does not seem to represent publication date
- the mag.Year field rarely matches unpaywall or crossref and can't be relied upon, so the mag set must essentially be dropped
- the unpaywall.year also conflicts with crossref.published_year, so crossref essentially ends up being the sole data provider

## Contacts
julian.tonti-filippini@curtin.edu.au

## License
Apache 2.0

## Requires
table observatory.doi20220709
table xref_issn_issnl
table core_heps
table core_rors
table core_journals

## Creates
table core_papers

*/
const compile = ({
  ns_core = 'project.dataset',
  replace = false,
}) => `
-- generated by: ${__filename}
BEGIN 
  -- extract a subset of papers filtered for basic ERA compatibility (to be refined downstream)
  CREATE TEMP TABLE base_papers AS (
    SELECT 
      doi,
      -- title,
      -- authors,
      year AS year_published, 
      is_oa, 
      type AS output_type, 
      cits AS num_citations, 
      issns, 
      rors 
    FROM ${ns_core}.raw_papers
    WHERE 
      doi IS NOT NULL AND doi != ''  -- must be an identified paper
      AND year BETWEEN 2011 AND 2021 -- must be published within the ERA period
      AND ARRAY_LENGTH(issns) > 0    -- must be linkable to a journal
      --AND ARRAY_LENGTH(rors) > 0   -- must be linkable to at least one institution
      AND type = 'journal-article'   -- must be a journal article
    
  );
  SELECT 'is a journal article, in the ERA period, with at least one ISSN', COUNT(1) AS total, COUNT(DISTINCT doi) AS uniques FROM base_papers;

  -- filter for papers that can be linked to an ERA journal (via ISSN)
  CREATE TEMP TABLE filter_journals AS (
    SELECT doi, ARRAY_AGG(DISTINCT era_id IGNORE NULLS) AS era_ids
    FROM base_papers
    LEFT JOIN UNNEST(issns) AS issn 
    INNER JOIN (
      SELECT era_round, era_id, issn
      FROM ${ns_core}.core_journals
      LEFT JOIN UNNEST(issns) AS issn
    ) AS B
    ON issn = B.issn
    GROUP BY doi
  );
  SELECT 'links to at least one ERA journal', COUNT(1) AS total, COUNT(DISTINCT doi) AS uniques FROM filter_journals;

  -- filter for recognised institutions (RoR)
  CREATE TEMP TABLE filter_rors AS (
    SELECT doi, ARRAY_AGG(DISTINCT ror IGNORE NULLS) AS rors
    FROM base_papers
    LEFT JOIN UNNEST(rors) AS ror
    INNER JOIN \`${ns_core}.core_rors\` AS X ON ror = X.ror
    GROUP BY doi
  );
  SELECT 'has at least one recognised RoR', COUNT(1) AS total, COUNT(DISTINCT doi) AS uniques FROM filter_rors;

  -- filter for recognised HEPs
  CREATE TEMP TABLE filter_heps AS (
    SELECT doi, ARRAY_AGG(DISTINCT ror IGNORE NULLS) AS rors
    FROM filter_rors
    LEFT JOIN UNNEST(rors) AS ror
    INNER JOIN \`${ns_core}.core_heps\` AS X ON ror = X.ror 
    GROUP BY doi
  );
  SELECT 'has at least one recognised HEP RoR', COUNT(1) AS total, COUNT(DISTINCT doi) AS uniques FROM filter_heps;

  -- filter for recognised ISSNs
  -- DISABLED: the official ISSN download list is missing many legitimate ISSN values that show up in the online search. Something is wrong with it.
  -- CREATE TEMP TABLE filter_issns AS (
  --   SELECT doi, ARRAY_AGG(DISTINCT issn IGNORE NULLS) AS issns
  --   FROM base_papers
  --   LEFT JOIN UNNEST(issns) AS issn 
  --   INNER JOIN \`${ns_core}.xref_issn_issnl\` AS X ON issn = X.issn 
  --   GROUP BY doi
  -- );
  -- SELECT 'has at least one recognised ISSN', COUNT(1) AS total, COUNT(DISTINCT doi) AS uniques FROM filter_issns;

  -- create the draft table
  CREATE TEMP TABLE final_unfiltered AS (
    SELECT 
      A.doi,
      --A.title,
      --A.authors,
      A.year_published, 
      A.num_citations,
      A.is_oa,
      A.output_type,
      B.era_ids,
      C.rors,
      D.rors AS heps,
      A.issns
      --E.issns
    FROM       base_papers     AS A
    INNER JOIN filter_journals AS B ON A.doi = B.doi -- filter data
    INNER JOIN filter_rors     AS C ON A.doi = C.doi -- filter data
    LEFT  JOIN filter_heps     AS D ON A.doi = D.doi -- add data
    --LEFT  JOIN filter_issns    AS E ON A.doi = E.doi -- add data
  );
  SELECT 'papers with more than one era_id', COUNT(1) AS total, COUNT(DISTINCT doi) AS uniques FROM final_unfiltered WHERE ARRAY_LENGTH(era_ids) != 1;

  -- create the final table
  CREATE TEMP TABLE final_filtered AS (
    SELECT 
      doi,
      era_ids[OFFSET(0)] AS era_id,
      --title,
      --authors,
      year_published, 
      num_citations,
      is_oa,
      rors,
      heps,
    FROM final_unfiltered
    WHERE ARRAY_LENGTH(era_ids) = 1
  );
  SELECT 'papers with only one era_id', COUNT(1) AS total, COUNT(DISTINCT doi) AS uniques FROM final_filtered;

  -- finally, add the fors with weights inherited from journals (for now, this will be changed in the future)
  ${replace ? 'CREATE OR REPLACE TABLE' : 'CREATE TABLE IF NOT EXISTS'} \`${ns_core}.core_papers\` AS (
    SELECT A.*, B.fors
    FROM final_filtered AS A
    INNER JOIN \`${ns_core}.core_journals\` AS B ON A.era_id = B.era_id AND ARRAY_LENGTH(B.fors) > 0
    ORDER BY year_published, num_citations DESC
  );
  SELECT 'final number of papers', COUNT(1) AS total, COUNT(DISTINCT doi) AS uniques FROM ${ns_core}.core_papers;
  
  -- set the schema
  ALTER TABLE \`${ns_core}.core_papers\` SET OPTIONS(description='A subset of the COKI DOI dataset that only includes journal articles relevant to ERA analysis');
  ALTER TABLE ${ns_core}.core_papers
  ALTER COLUMN doi            SET OPTIONS (description='unique ID for a paper. Digital Object Identifier: https://www.doi.org/'),
  ALTER COLUMN year_published SET OPTIONS (description='year of publication for the paper (source: crossref)'),
  ALTER COLUMN num_citations  SET OPTIONS (description='the number of citations the paper has accumulated since publication (source: crossref & opencitations)'),
  ALTER COLUMN is_oa          SET OPTIONS (description='true if the output has been identified by Unpaywall as Open Access'),
  ALTER COLUMN era_id         SET OPTIONS (description='the ERA Journal ID of the journal that published this paper'),
  ALTER COLUMN rors           SET OPTIONS (description='unique RoR identifiers for all institutions associated with the work'),
  ALTER COLUMN heps           SET OPTIONS (description='unique RoR identifiers for Australian higher education providers associated with the work'),
  ALTER COLUMN fors           SET OPTIONS (description='field of research codes with weightings (currently) inherited from the publishing journal');

  -- run tests
  SELECT 'certain fields should not be empty or null' AS description,
    IF(COUNTIF(doi    IS NULL OR doi    = '') = 0, 'pass', 'fail') AS test1,
    IF(COUNTIF(era_id IS NULL OR era_id = '') = 0, 'pass', 'fail') AS test2,
    IF(COUNTIF(ARRAY_LENGTH(rors)       = 0 ) = 0, 'pass', 'fail') AS test3,
    IF(COUNTIF(ARRAY_LENGTH(fors)       = 0 ) = 0, 'pass', 'fail') AS test4
  FROM ${ns_core}.core_papers;
END;
`;
const compile_all = (args={}) => [ compile(args) ];
module.exports = { compile, compile_all };
if (require.main === module) require('app').cli_compile(compile_all);
