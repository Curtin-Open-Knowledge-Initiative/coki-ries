/*
## Summary
Assigs RCI scores to all journal articles.

## Description
Method: https://github.com/Curtin-Open-Knowledge-Initiative/coki-ries/blob/main/docs/era_2018.md#indicator-relative-citation-impact-rci

The Research Citation Impact for a paper is calculated separately for each FoR (field of research) that the paper contributes to. It is the number of citations for the paper divided by a citation benchmark value for the given FoR and year of publication. If there is no benchmark value available, the RCI is zero. Using year specific benchmarks helps to control somewhat for time bias (papers accumulate more citation over time). Separate RCI scores are assigned against different benchmarks (CPP global, CPP local, CPP HPI).

## Contacts
julian.tonti-filippini@curtin.edu.au

## License
Apache 2.0

## Requires
table core_papers
table benchmarks_cpp_*
table benchmarks_hpi_*

## Creates
table rci_papers
*/
const compile = ({
  ns_core = 'project.dataset',
  digits  = '4',
  replace = false,
}) => `
-- generated by: ${__filename}
BEGIN
  -- assign RCI scores to each paper, against global CPP, local CPP and global HPI
  ${replace ? 'CREATE OR REPLACE TABLE' : 'CREATE TABLE IF NOT EXISTS'} \`${ns_core}.rci_papers\` AS (
    SELECT 
      A.doi,
      A.year_published AS year,
      F.code AS field,
      F.weight AS weight,
      IF(B.benchmark = 0 OR B.benchmark IS NULL, 0, A.num_citations / B.benchmark) AS rci_local,
      IF(C.benchmark = 0 OR C.benchmark IS NULL, 0, A.num_citations / C.benchmark) AS rci_world,
      IF(D.benchmark = 0 OR D.benchmark IS NULL, 0, A.num_citations / D.benchmark) AS hpi_world
    FROM \`${ns_core}.core_papers\` AS A
    LEFT JOIN UNNEST(fors) AS F
    LEFT JOIN \`${ns_core}.benchmarks_cpp_local_${digits}\` AS B ON A.year_published = B.year AND F.code = B.code 
    LEFT JOIN \`${ns_core}.benchmarks_cpp_world_${digits}\` AS C ON A.year_published = C.year AND F.code = C.code 
    LEFT JOIN \`${ns_core}.benchmarks_hpi_world_${digits}\` AS D ON A.year_published = D.year AND F.code = D.field 
    ORDER BY doi,field
  );
END;`;
const compile_all = (args={}) => [ compile(args) ];
module.exports = { compile, compile_all };
if (require.main === module) require('app').cli_compile(compile_all);
